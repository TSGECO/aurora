#!/usr/bin/env python3
"""
Convert gene data from TXT format to JavaScript.
Usage: python gene_converter.py input.txt output.js
"""

import sys
import json
import os


def convert_gene_data(input_file, output_file):
    """Convert gene data from tab-delimited text file to JavaScript."""
    try:
        with open(input_file, "r") as f:
            lines = f.readlines()

        # Parse header
        header = lines[0].strip().split()

        # Parse data rows
        genes = []
        for line in lines[1:]:
            if not line.strip():
                continue

            fields = line.strip().split()
            if len(fields) < len(header):
                print(f"Warning: Skipping incomplete line: {line.strip()}")
                continue

            gene = {}
            for i, field_name in enumerate(header):
                # Convert numeric fields to integers
                if field_name in ["start", "end"]:
                    gene[field_name] = int(fields[i])
                else:
                    gene[field_name] = fields[i]

            genes.append(gene)

        # Create JavaScript output
        js_output = []
        js_output.append("// geneData.js - Generated by converter script")
        js_output.append(
            "export const geneDatabase = " + json.dumps(genes, indent=2) + ";"
        )
        js_output.append("")
        js_output.append("// Helper functions for working with gene data")
        js_output.append("export function searchGeneByName(name) {")
        js_output.append("  return geneDatabase.filter(gene => ")
        js_output.append(
            "    gene.gene_name.toLowerCase().includes(name.toLowerCase())"
        )
        js_output.append("  );")
        js_output.append("}")
        js_output.append("")
        js_output.append("export function searchGeneById(id) {")
        js_output.append("  return geneDatabase.find(gene => gene.gene_id === id);")
        js_output.append("}")
        js_output.append("")
        js_output.append("export default geneDatabase;")

        # Write to output file
        with open(output_file, "w") as f:
            f.write("\n".join(js_output))

        print(f"Successfully converted {len(genes)} genes to JavaScript!")
        print(f"Output written to: {output_file}")

    except Exception as e:
        print(f"Error: {e}")
        return False

    return True


if __name__ == "__main__":
    # python gene_converter.py genes.txt src/data/geneData.js

    if len(sys.argv) != 3:
        print("Usage: python gene_converter.py input.txt output.js")
        sys.exit(1)

    input_file = sys.argv[1]
    output_file = sys.argv[2]

    if not os.path.exists(input_file):
        print(f"Error: Input file '{input_file}' not found.")
        sys.exit(1)

    success = convert_gene_data(input_file, output_file)
    sys.exit(0 if success else 1)
